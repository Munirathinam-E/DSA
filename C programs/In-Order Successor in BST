#include <stdio.h>
#include <stdlib.h>
struct Node {
    int data;
    struct Node *left, *right;
};
struct Node *newNode(int item) {
    struct Node *temp = (struct Node *)malloc(sizeof(struct Node));
    temp->data = item;
    temp->left = temp->right = NULL;
    return temp;
}
struct Node *insert(struct Node *node, int data) {
    if (node == NULL) return newNode(data);
    if (data < node->data)
        node->left = insert(node->left, data);
    else if (data > node->data)
        node->right = insert(node->right, data);
    return node;
}

struct Node *minValueNode(struct Node *node) {
    struct Node *current = node;
    while (current && current->left != NULL)
        current = current->left;
    return current;
}
struct Node *inOrderSuccessor(struct Node *root, struct Node *node) {
    if (node->right != NULL)
        return minValueNode(node->right);
    struct Node *successor = NULL;
    while (root != NULL) {
        if (node->data < root->data) {
            successor = root;
            root = root->left;
        } else if (node->data > root->data)
            root = root->right;
        else
            break;
    }
    return successor;
}
int main() {
    struct Node *root = NULL;
    int n, data,i;
    printf("Enter the number of nodes: ");
    scanf("%d", &n);
    printf("Enter the nodes:\n");
    for ( i = 0; i < n; i++) {
        scanf("%d", &data);
        root = insert(root, data);
    }
    printf("Enter the value of the node for which you want to find the in-order successor: ");
    scanf("%d", &data);
    struct Node *node = newNode(data);
    struct Node *successor = inOrderSuccessor(root, node);
    if (successor != NULL)
        printf("Inorder successor of %d is %d\n", node->data, successor->data);
    else
        printf("No inorder successor found\n");
    return 0;
}

